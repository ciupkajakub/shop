# To make it easier to find descriptions and add exceptions
AllCops:
  DisplayCopNames: true
  TargetRubyVersion: 3.2.2
  NewCops: enable
  Exclude:
    - 'db/schema.rb'
    - 'bin/*'
    - 'Rakefile'
    - 'cable/*'
    - 'config.ru'
    - 'config/*'
    - 'config/*/*'
    -  'db/migrate/*'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Layout/DotPosition
# So when reading code we know that given line has continuation
Layout/DotPosition:
  EnforcedStyle: 'trailing'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Layout/IndentHash
# To make reasonable use of whitespace
Layout/FirstHashElementIndentation:
  EnforcedStyle: 'consistent'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Layout/IndentArray
# To make reasonable use of whitespace
Layout/FirstArrayElementIndentation:
  EnforcedStyle: 'consistent'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Metrics/LineLength
# To fit Github review window
# Migration names tend to be long
Layout/LineLength:
  Max: 120
  Exclude:
    - 'db/migrate/**/*'
    - 'db/seeds/**/*'
    - 'bin/bundle'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Lint/AmbiguousBlockAssociation
# It looks perfectly fine for asserting change
Lint/AmbiguousBlockAssociation:
  Exclude:
    - '**/*_spec.rb'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Metrics/AbcSize
# Lets be reasonable about it
# It is common to exceed AbcSize in migrations
Metrics/AbcSize:
  Max: 17
  Exclude:
    - 'db/migrate/**/*'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Metrics/BlockLength
# It is common to have long blocks in routes, specs, matchers,
# factories and configuration files
Metrics/BlockLength:
  Exclude:
    - 'config/routes.rb'
    - 'config/environments/development.rb'
    - 'spec/**/*.rb'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Metrics/MethodLength
# 12 does not seem too restrictive
# Long methods are common to migrations and seeds
Metrics/MethodLength:
  Max: 12
  Exclude:
    - 'db/migrate/**/*'
    - 'db/seeds/**/*'
    - 'app/controllers/graphql_controller.rb'

# https://www.rubydoc.info/github/bbatsov/RuboCop/RuboCop/Cop/Metrics/ModuleLength
# Large modules are totally fine in rspec
Metrics/ModuleLength:
  Exclude:
    - '**/*_spec.rb'

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/AccessorMethodName
# It is common to expose `get_` like interface in wrappers
Naming/AccessorMethodName:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/VariableNumber
# More readable
Naming/VariableNumber:
  EnforcedStyle: 'snake_case'
  Exclude:
    - 'Gemfile'

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Alias
# To keep it consistent. `alias` does not work for all cases (i.e. aliasing at runtime)
Style/Alias:
  EnforcedStyle: 'prefer_alias_method'

Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/BlockDelimiters
Style/BlockDelimiters:
  Enabled: true

Style/ClassAndModuleChildren:
  EnforcedStyle: compact
  Exclude:
    - 'config/application.rb'

Style/CollectionCompact: # (new in 1.2)
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DateTime
# We do not care about it that much, and sometimes we need it
Style/DateTime:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Documentation
# We prefer everything to be self-explanatory
Style/Documentation:
  Enabled: false

Style/EndlessMethod: # (new in 1.8)
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FormatString
# The shortest syntax
Style/FormatString:
  EnforcedStyle: 'percent'

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FrozenStringLiteralComment
# We do not care
Style/FrozenStringLiteralComment:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/GuardClause
# Sometimes using explicit condition is more readable
Style/GuardClause:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/MutableConstant
Style/MutableConstant:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/NumericLiterals
# It looks awkward for custom ids
Style/NumericLiterals:
  Exclude:
    - '**/*_spec.rb'
    - '**/*_factory.rb'

Style/StructInheritance:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/SymbolArray
# Common way to describe indices
Style/SymbolArray:
  Exclude:
    - 'db/migrate/**/*'

Metrics/ClassLength:
  # specs tend to be long
  Exclude:
    - '**/*_spec.rb'
    - 'db/**/*'

# https://rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/MethodParameterName
# i.e. "at" is still communicative
Naming/MethodParameterName:
  MinNameLength: 2
  Exclude:
    - 'app/controllers/graphql_controller.rb'

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/FormatStringToken
# It is reasonable not to annotate every single token
Style/FormatStringToken:
  Enabled: false

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/Lambda
# Scopes look better with `->` notation
Style/Lambda:
  Exclude:
    - 'app/models/**/*'

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashEachMethods
# Checks for uses of `each_key` and `each_value` Hash methods
Style/HashEachMethods:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformKeys
# Looks for uses that can be expressed as transform_keys
Style/HashTransformKeys:
  Enabled: true

# https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/HashTransformValues
# Looks for uses that can be expressed as transform_values
Style/HashTransformValues:
  Enabled: true

Lint/Debugger:
  Enabled: true

Style/MixinUsage:
  Enabled: true

Bundler/DuplicatedGem:
  Enabled: true
  Exclude:
    - 'Gemfile'

Metrics/PerceivedComplexity:
  Exclude:
    - 'bin/bundle'

Metrics/CyclomaticComplexity:
  Exclude:
    - 'bin/bundle'